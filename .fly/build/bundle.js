!function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{configurable:!1,enumerable:!0,get:getter})},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=0)}([function(module,exports){const corsHeaders={headers:{"Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Methods":"GET","Access-Control-Allow-Origin":"*"}};fly.http.respondWith(async req=>{const url=new URL(req.url);if("/api/issues"!=url.pathname){let file=await fetch("file:/"+("/"==url.pathname?"/index.html":url.pathname)).catch(e=>new Response(e));return new Response(await file.text())}try{const url=new URL(req.url);let issuesResponse=await async function(username,repo){const query=`\n    query {\n      repository(owner:"${username}", name:"${repo}") {\n        issues(last:20, states:OPEN) {\n          edges {\n            node {\n              title\n              url\n              bodyText\n              url\n              author {\n                url\n                avatarUrl\n              }\n              createdAt\n              id\n              bodyHTML\n            } \n          }\n        }\n      }\n    }\n  `;let result=await fetch("https://api.github.com/graphql",{method:"POST",headers:{Authorization:"Bearer f0074d35b43bcc9785ec9d67092a4cf1e658ab4c","Content-Type":"application/json","User-Agent":"mikedane"},body:JSON.stringify({query:query})}).catch(e=>console.error(e));return result=await result.json()}(url.searchParams.get("user"),url.searchParams.get("repo"));if(issuesResponse.errors)return new Response(JSON.stringify({errors:issuesResponse.errors.map(error=>error.message)}),corsHeaders);{let promises=issuesResponse.data.repository.issues.edges.map(issue=>(async function(text){let sentimentInfo=await fetch("http://text-processing.com/api/sentiment/",{method:"POST",body:"text="+text}).catch(e=>console.error(e));return(sentimentInfo=await sentimentInfo.json()).probability})(issue.node.title+". "+issue.node.bodyText).then(result=>{issue.node.sentiment=result}));return await Promise.all(promises),new Response(JSON.stringify({issues:issuesResponse.data.repository.issues.edges.map(edge=>edge.node)}),corsHeaders)}}catch(e){return new Response(JSON.stringify({errors:[e]}),corsHeaders)}})}]);
//# sourceMappingURL=bundle.map.json